plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
}

version = project.buildVersion
group = project.mavenGroup

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url 'https://maven.wispforest.io' }
    mavenCentral()
}

//loom {
////    splitEnvironmentSourceSets()
////	mods {
////		"rpshare" {
//////			sourceSet sourceSets.client
////		}
////	}
//}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

	modImplementation "io.wispforest:owo-lib:${project.owo_version}"
    include "io.wispforest:owo-sentinel:${project.owo_version}"

//	api(project(":common"))

	implementation project(':common')
 	include project(':common')

    // Uncomment the following line to enable the deprecated Fabric API modules.
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}



jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}
